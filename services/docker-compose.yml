version: '3.9'

services:
  consul:
    image: consul:latest
    container_name: consul-server
    restart: always
    ports:
      - "8500:8500"     
      - "8600:8600/udp"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 -bind=0.0.0.0
    networks:
      - flextest-network
    healthcheck:
      test: ["CMD", "consul", "info"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - consul-data:/consul/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_INITDB_STORAGE_ENGINE: wiredTiger
    networks:
      - flextest-network
    deploy:
      resources:
        limits:
          memory: 512M
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mongo-data:/data/db

  redis-server:
    image: redis
    container_name: redis-server
    restart: always
    networks:
      - flextest-network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - flextest-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  flextest-network:
    driver: bridge

volumes:
  mongo-data:
  consul-data:
  redis-data:
    driver: local
  postgres-data:
    driver: local
